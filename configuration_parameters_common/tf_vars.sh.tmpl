# The following two values are the only ones that should be explicitly set.
export TF_VAR_tenancy_ocid=

export TF_VAR_database_admin_password=R3plac3Th!sN0W

# You can override the following values but some changes might not work if you are using a free tier account.
if [ "$OCI_CLI_CONFIG_FILE" == "" ]
then
    export OCI_CLI_CONFIG_FILE=$HOME/.oci/config
fi

if [ "$OCI_CLI_PROFILE" == "" ]
then
    export TF_VAR_config_file_profile=DEFAULT
else
    export TF_VAR_config_file_profile=$OCI_CLI_PROFILE
fi

export TF_VAR_shape=VM.Standard.A1.Flex

export TF_VAR_number_of_ocpus=1

export TF_VAR_memory_in_gbs=1

export TF_VAR_image_operating_system="Oracle Linux"

export TF_VAR_image_operating_system_version="7.9"

export TF_VAR_load_balancer_bandwidth_in_mbps=10

export TF_VAR_webservice_port=8080

export TF_VAR_webservice_healthcheck_url=/actuator/health

export TF_VAR_project_name=demo

export TF_VAR_project_version=0.1

# The AD to use. Typically 1, 2 or 3.
export TF_VAR_ad_number=1

# This must be less than or equal to 4 if you're using free
# tier resources.
export TF_VAR_number_of_instances=2

export TF_VAR_load_balancer_port=443

export TF_VAR_database_wallet_password=$TF_VAR_database_admin_password

this_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")")

export TF_VAR_vm_ssh_private_key=$this_dir/vm_ssh_key

export TF_VAR_vm_ssh_key=${TF_VAR_vm_ssh_private_key}.pub

export TF_VAR_load_balancer_key=../configuration_parameters_common/load_balancer_key.pem

export TF_VAR_load_balancer_cert=../configuration_parameters_common/load_balancer_cert.pem

# Some sanity checking.
# Is terraform installed
if ! which terraform >/dev/null
then
    echo "You need to install Terraform."
    echo "https://www.terraform.io/downloads.html"
    exit 1
fi

# Check that we have an OCI config file
if [ ! -e $OCI_CLI_CONFIG_FILE ]
then
    mkdir -p ~/.oci
    echo "You need to set up your OCI configuration at $OCI_CLI_CONFIG_FILE."
    echo "Run: oci setup config"
    exit 1
fi

# Check that the tenancy is defined
if [ "$TF_VAR_tenancy_ocid" == "" ]
then
    if [ "$OCI_CLI_TENANCY" == "" ]
    then
        echo "You did not set the value of TF_VAR_tenancy_ocid in the $this_dir/tf_vars.sh file."
        export TF_VAR_tenancy_ocid=$(grep ^tenancy $OCI_CLI_CONFIG_FILE | cut -d= -f2 | head -1)
        echo "Using tenancy $TF_VAR_tenancy_ocid."
    else
        export TF_VAR_tenancy_ocid=$OCI_CLI_TENANCY
    fi
fi

# Check that we have an SSH key
if [ ! -e $TF_VAR_vm_ssh_private_key ]
then
    echo "Generating an SSH key..."
    ssh-keygen -f $TF_VAR_vm_ssh_private_key -N ""
fi

# Check that we have a load balancer key
if [ ! -e $this_dir/load_balancer_key.pem ]
then
    echo "Generating an SSL key and self-signed certificate for the load balancer..."
    openssl req -nodes -new -x509 -keyout $this_dir/load_balancer_key.pem -out $this_dir/load_balancer_cert.pem -subj "/C=/ST=/L=/O=/CN=example.com" -days 365
fi
