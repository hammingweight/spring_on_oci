---
# The Oracle Linux image that we use doesn't have Java and the
# firewall is very locked down. We install Java, SQLcl and
# open the firewall to allow traffic to the port that our
# Spring service exposes.
- hosts: all
  gather_facts: false
  vars:
    # Our OCI instances were tagged during provisioning
    # with a label, e.g. "demo_instance".
    instance_tag: "{{ project_name }}_instance"

  tasks:
  - block:
    - name: open firewall for the spring service
      firewalld:
        port: "{{ webservice_port }}/tcp"
        state: enabled
        immediate: True
        permanent: True
      become: True

    - name: install java
      yum:
        name: java-11-openjdk-devel
        state: latest
      become: True

    # Hopefully an RPM for sqlcl will be available soon so that we don't need to jump
    # through so many hoops to install it.
    - name: download sqlcl
      get_url:
        url: https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-21.1.1.113.1704.zip
        dest: /home/opc/sqlcl.zip
    - name: create directory for sqlcl
      file:
        path: /opt/oracle
        state: directory
        mode: '0755'
      become: True
    - name: unzip sqlcl
      unarchive:
        src: /home/opc/sqlcl.zip
        remote_src: True
        dest: /opt/oracle
      become: True
    - name: create symlink for sqlcl
      file:
        src: /opt/oracle/sqlcl/bin/sql
        dest: /usr/bin/sql
        state: link
      become: True
    - name: clean up sqlcl archive
      file:
        path: /home/opc/sqlcl.zip
        state: absent

    # Install the wallet for communicating with the database.
    # The wallet is base64 encoded.
    - name: copy the wallet
      copy:
        src: ../1_provision/{{ project_name }}_wallet.zip.asc
        dest: ~/{{ project_name }}_wallet.zip.asc

    - name: base64 decode the wallet
      shell: base64 -d ~/{{ project_name }}_wallet.zip.asc > ~/{{ project_name }}_wallet.zip

    - name: create a directory for the wallet
      file:
        path: ~/{{ project_name }}_wallet
        state: directory

    - name: unzip the wallet
      unarchive:
        src: ~/{{ project_name }}_wallet.zip
        remote_src: True
        dest: ~/{{ project_name }}_wallet

    - name: clean up the base64-encoded wallet file
      file:
        path: ~/{{ project_name }}_wallet.zip.asc
        state: absent
    # We only want this script to run on the instances that have
    # the expected tag. If we have other instances this script
    # should ignore them.
    when: instance_tag in freeform_tags
